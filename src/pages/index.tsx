import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { signIn, signOut, useSession } from "next-auth/react";
import styles from "./index.module.css";
import { atom, useAtom } from "jotai";
import ColorPicker from "../components/ColorPicker";
import { styled } from "@stitches/react";
import { useState } from "react";

const Home: NextPage = () => {
	const { data } = trpc.example.hello.useQuery({ text: "from tRPC" });
	const textAtom = atom(data?.greeting);

	return (
		<>
			<Head>
				<title>Psyche Daily</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className={styles.containerOuter}>
				<div className={styles.containerInner}>
					<h1 className={styles.title}></h1>
					<h3 className={styles.subtitle}>Psyche Daily product page</h3>
					<div className={styles.cardGrid}>download link to app</div>
					<div className={styles.helloFrom}>
						TRPC response: {data ? <p>{data.greeting}</p> : <p>Loading...</p>}
					</div>
					<AuthShowcase />
				</div>
			</div>
		</>
	);
};

export default Home;

const AuthShowcase: React.FC = () => {
	const [backgroundColor, setBackgroundColor] = useState("");
	const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();

	const { data: sessionData } = useSession();

	return (
		<div className={styles.authShowcase}>
			{sessionData && <p>Logged in as {sessionData?.user?.name}</p>}
			{secretMessage && <p>{secretMessage}</p>}
			<button
				className={styles.signInButton}
				onClick={sessionData ? () => signOut() : () => signIn()}
			>
				{sessionData ? "Sign out" : "Sign in"}
			</button>
			{sessionData && (
				<>
					<ColorPicker
						showHexInputField
						onSelectColor={(color) => setBackgroundColor(color.toLocaleUpperCase())}
					/>
					<ChosenColor css={{ backgroundColor: backgroundColor }} />
				</>
			)}
		</div>
	);
};

const ChosenColor = styled("div", {
	height: "25px",
	width: "25px",
	borderRadius: "50%",
	display: "inline-block",
	"&:hover": {
		backgroundColor: "lightgray",
	},
});
